apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version

    defaultConfig {
        applicationId "com.dimsuz.yamm"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

androidExtensions {
    experimental = true
    defaultCacheImplementation = "SPARSE_ARRAY"
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile rootProject.ext.junit
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // NOTE: whenever changing a list of dependent modules, think twice if this is really needed,
    // especially when *adding* a new module, especially if module you are adding are already present
    // in 'implementation' dependencies of another module: maybe it was intended for
    // it to not "leak" further.
    implementation project(path: ':app-core')
    implementation project(path: ':app-domain')
    implementation project(path: ':app-repositories') // notice: no dependency on app-data-sources!

    compile rootProject.ext.supportLibAppCompat
    compile rootProject.ext.supportLibDesign
    compile rootProject.ext.conductor
    compile rootProject.ext.mosby
    compile rootProject.ext.mosbyMvi
    compile rootProject.ext.conductorMvi
    compile rootProject.ext.rxAndroid

    implementation rootProject.ext.timber

    compile rootProject.ext.constraintLayout
    compile rootProject.ext.cicerone

    compile rootProject.ext.toothpickRuntime
    kapt rootProject.ext.toothpickProcessor

    implementation("com.mikepenz:materialdrawer:6.0.1@aar") {
        transitive = true
    }
}
